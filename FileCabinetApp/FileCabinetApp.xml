<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FileCabinetApp</name>
    </assembly>
    <members>
        <member name="T:FileCabinetApp.CommandHandlers.AppCommandRequest">
            <summary>
            Command request.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.AppCommandRequest.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.AppCommandRequest"/> class.
            </summary>
            <param name="command">Command.</param>
            <param name="parameters">Parameters.</param>
        </member>
        <member name="P:FileCabinetApp.CommandHandlers.AppCommandRequest.Command">
            <summary>
            Gets or sets command.
            </summary>
        </member>
        <member name="P:FileCabinetApp.CommandHandlers.AppCommandRequest.Parameters">
            <summary>
            Gets or sets parameters.
            </summary>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.CommandHandlerBase">
            <summary>
            Commands handler.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.CommandHandlerBase.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Execute request.
            </summary>
            <param name="request">Request for execution that contain command and parameters.</param>
            <returns>Execution result message.</returns>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.CommandHandlerBase.SetNext(FileCabinetApp.CommandHandlers.ICommandHandler)">
            <summary>
            Link this handler with next handler.
            </summary>
            <param name="handler">Next handler.</param>
            <returns>Next handler for chain linking.</returns>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ConcreteHandlers.CreateCommandHandler">
            <summary>
            Command handler for execution 'create' command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ConcreteHandlers.CreateCommandHandler.#ctor(FileCabinetApp.Services.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.ConcreteHandlers.CreateCommandHandler"/> class.
            </summary>
            <param name="service">Service.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ConcreteHandlers.CreateCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Execute 'create' request.
            </summary>
            <param name="request">Request for execution that contain command and parameters.</param>
            <returns>Execution result message.</returns>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ConcreteHandlers.DeleteCommandHandler">
            <summary>
            Command handler for execution 'export' command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ConcreteHandlers.DeleteCommandHandler.#ctor(FileCabinetApp.Services.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.ConcreteHandlers.DeleteCommandHandler"/> class.
            </summary>
            <param name="service">Service <see cref="T:FileCabinetApp.Services.IFileCabinetService"/>.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ConcreteHandlers.DeleteCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Execute 'delete' request.
            </summary>
            <param name="request">Request for execution that contain command and parameters.</param>
            <returns>Execution result message.</returns>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ConcreteHandlers.ExitCommandHandler">
            <summary>
            Command handler for execution 'exit' command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ConcreteHandlers.ExitCommandHandler.#ctor(System.Action{System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.ConcreteHandlers.ExitCommandHandler"/> class.
            </summary>
            <param name="exit">Method than change isRunning <see cref="T:FileCabinetApp.Program"/>.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ConcreteHandlers.ExitCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Execute 'exit' request.
            </summary>
            <param name="request">Request for execution that contain command and parameters.</param>
            <returns>Execution result message.</returns>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ConcreteHandlers.ExportCommandHandler">
            <summary>
            Command handler for execution 'export' command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ConcreteHandlers.ExportCommandHandler.#ctor(FileCabinetApp.Services.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.ConcreteHandlers.ExportCommandHandler"/> class.
            </summary>
            <param name="service">Service <see cref="T:FileCabinetApp.Services.IFileCabinetService"/>.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ConcreteHandlers.ExportCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Execute 'export' request.
            </summary>
            <param name="request">Request for execution that contain command and parameters.</param>
            <returns>Execution result message.</returns>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ConcreteHandlers.HelpCommandHandler">
            <summary>
            Command handler for execution 'help' command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ConcreteHandlers.HelpCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Execute 'help' request.
            </summary>
            <param name="request">Request for execution that contain command and parameters.</param>
            <returns>Execution result message.</returns>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ConcreteHandlers.ImportCommandHandler">
            <summary>
            Command handler for execution 'import' command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ConcreteHandlers.ImportCommandHandler.#ctor(FileCabinetApp.Services.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.ConcreteHandlers.ImportCommandHandler"/> class.
            </summary>
            <param name="service">Service <see cref="T:FileCabinetApp.Services.IFileCabinetService"/>.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ConcreteHandlers.ImportCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Execute 'export' request.
            </summary>
            <param name="request">Request for execution that contain command and parameters.</param>
            <returns>Execution result message.</returns>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ConcreteHandlers.InsertCommandHandler">
            <summary>
            Command handler for execution 'insert' command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ConcreteHandlers.InsertCommandHandler.#ctor(FileCabinetApp.Services.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.ConcreteHandlers.InsertCommandHandler"/> class.
            </summary>
            <param name="service">Service <see cref="T:FileCabinetApp.Services.IFileCabinetService"/>.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ConcreteHandlers.InsertCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Execute 'import' request.
            </summary>
            <param name="request">Request for execution that contain command and parameters.</param>
            <returns>Execution result message.</returns>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ConcreteHandlers.PurgeCommandHandler">
            <summary>
            Command handler for execution 'purge' command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ConcreteHandlers.PurgeCommandHandler.#ctor(FileCabinetApp.Services.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.ConcreteHandlers.PurgeCommandHandler"/> class.
            </summary>
            <param name="service">Service <see cref="T:FileCabinetApp.Services.FileCabinetFilesystemService"/>.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ConcreteHandlers.PurgeCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Execute 'purge' request.
            </summary>
            <param name="request">Request for execution that contain command and parameters.</param>
            <returns>Execution result message.</returns>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ConcreteHandlers.SelectCommandHandler">
            <summary>
            Command handler for execution 'select' command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ConcreteHandlers.SelectCommandHandler.#ctor(FileCabinetApp.Services.IFileCabinetService,System.Action{System.Collections.Generic.IList{FileCabinetApp.Records.FileCabinetRecord},System.Collections.Generic.IList{System.String}})">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.ConcreteHandlers.SelectCommandHandler"/> class.
            </summary>
            <param name="service">Service <see cref="T:FileCabinetApp.Services.IFileCabinetService"/>.</param>
            <param name="print">Method for printing records.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ConcreteHandlers.SelectCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Execute 'select' request.
            </summary>
            <param name="request">Request for execution that contain command and parameters.</param>
            <returns>Execution result message.</returns>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ConcreteHandlers.StatCommandHandler">
            <summary>
            Command handler for execution 'stat' command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ConcreteHandlers.StatCommandHandler.#ctor(FileCabinetApp.Services.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.ConcreteHandlers.StatCommandHandler"/> class.
            </summary>
            <param name="service">Service <see cref="T:FileCabinetApp.Services.IFileCabinetService"/>.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ConcreteHandlers.StatCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Execute 'export' request.
            </summary>
            <param name="request">Request for execution that contain command and parameters.</param>
            <returns>Execution result message.</returns>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ConcreteHandlers.UpdateCommandHandler">
            <summary>
            Command handler for execution 'update' command.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ConcreteHandlers.UpdateCommandHandler.#ctor(FileCabinetApp.Services.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.ConcreteHandlers.UpdateCommandHandler"/> class.
            </summary>
            <param name="service">Service <see cref="T:FileCabinetApp.Services.IFileCabinetService"/>.</param>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ConcreteHandlers.UpdateCommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Execute 'update' request.
            </summary>
            <param name="request">Request for execution that contain command and parameters.</param>
            <returns>Execution result message.</returns>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ICommandHandler">
            <summary>
            Commands handler.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ICommandHandler.SetNext(FileCabinetApp.CommandHandlers.ICommandHandler)">
            <summary>
            Link this handler with next handler.
            </summary>
            <param name="handler">Next handler.</param>
            <returns>Next handler for chain linking.</returns>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ICommandHandler.Handle(FileCabinetApp.CommandHandlers.AppCommandRequest)">
            <summary>
            Execute request.
            </summary>
            <param name="request">Request for execution that contain command and parameters.</param>
            <returns>Execution result message.</returns>
        </member>
        <member name="T:FileCabinetApp.CommandHandlers.ServiceCommandHandlerBase">
            <summary>
            Commands handler that use the service.
            </summary>
        </member>
        <member name="F:FileCabinetApp.CommandHandlers.ServiceCommandHandlerBase.service">
            <summary>
            Service <see cref="T:FileCabinetApp.Services.IFileCabinetService"/>.
            </summary>
        </member>
        <member name="M:FileCabinetApp.CommandHandlers.ServiceCommandHandlerBase.#ctor(FileCabinetApp.Services.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.CommandHandlers.ServiceCommandHandlerBase"/> class.
            </summary>
            <param name="service">Service for initializing <see cref="T:FileCabinetApp.Services.IFileCabinetService"/>.</param>
        </member>
        <member name="T:FileCabinetApp.Constants.ByteOffsetConstants">
            <summary>
            Constants for ByteRecord.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Constants.ByteOffsetConstants.NameCapacity">
            <summary>
            Capacity byte representation of the name.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Constants.ByteOffsetConstants.DateCapacity">
            <summary>
            Capacity byte representation of the date.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Constants.ByteOffsetConstants.IdOffset">
            <summary>
            Offset from start of recording to id.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Constants.ByteOffsetConstants.FirstNameOffset">
            <summary>
            Offset from start of recording to FirstName.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Constants.ByteOffsetConstants.LastNameOffset">
            <summary>
            Offset from start of recording to LastName.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Constants.ByteOffsetConstants.YearOffset">
            <summary>
            Offset from start of recording to Year.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Constants.ByteOffsetConstants.MonthOffset">
            <summary>
            Offset from start of recording to Month.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Constants.ByteOffsetConstants.DayOffset">
            <summary>
            Offset from start of recording to Day.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Constants.ByteOffsetConstants.HeightOffset">
            <summary>
            Offset from start of recording to Height.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Constants.ByteOffsetConstants.WeightOffset">
            <summary>
            Offset from start of recording to Weight.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Constants.ByteOffsetConstants.FavoriteCharacterOffset">
            <summary>
            Offset from start of recording to FavoriteCharacter.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Constants.ByteOffsetConstants.Size">
            <summary>
            Total size byte representation of the record.
            </summary>
        </member>
        <member name="T:FileCabinetApp.Converters.Converter">
            <summary>
            Converter.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Converters.Converter.ConvertString(System.String)">
            <summary>
            Convert str to char.
            </summary>
            <param name="str">Converted string.</param>
            <returns>bool-is converted, string-conversion message, string-result.</returns>
        </member>
        <member name="M:FileCabinetApp.Converters.Converter.ConvertDate(System.String)">
            <summary>
            Convert str to char.
            </summary>
            <param name="date">Converted string.</param>
            <returns>bool-is converted, string-conversion message, DateTime-result.</returns>
        </member>
        <member name="M:FileCabinetApp.Converters.Converter.ConvertShort(System.String)">
            <summary>
            Convert str to char.
            </summary>
            <param name="str">Converted string.</param>
            <returns>bool-is converted, string-conversion message, short-result.</returns>
        </member>
        <member name="M:FileCabinetApp.Converters.Converter.ConvertDecimal(System.String)">
            <summary>
            Convert str to char.
            </summary>
            <param name="str">Converted string.</param>
            <returns>bool-is converted, string-conversion message, decimal-result.</returns>
        </member>
        <member name="M:FileCabinetApp.Converters.Converter.ConvertChar(System.String)">
            <summary>
            Convert str to char.
            </summary>
            <param name="str">Converted string.</param>
            <returns>bool-is converted, string-conversion message, char-result.</returns>
        </member>
        <member name="M:FileCabinetApp.Converters.Converter.StringToBytes(System.String,System.Int32)">
            <summary>
            Convert string to byte array.
            </summary>
            <param name="value">Converted string.</param>
            <param name="capacity">Capacity of byte array.</param>
            <returns>byte array.</returns>
        </member>
        <member name="T:FileCabinetApp.Enums.ByteRecordStatus">
            <summary>
            Enum for ByteRecord statuses.
            </summary>
        </member>
        <member name="F:FileCabinetApp.Enums.ByteRecordStatus.Normal">
            <summary>
            record contains in file
            </summary>
        </member>
        <member name="F:FileCabinetApp.Enums.ByteRecordStatus.Deleted">
            <summary>
            record was delete
            </summary>
        </member>
        <member name="T:FileCabinetApp.Printers.DefaultRecordPrinter">
            <summary>
            Record printer.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Printers.DefaultRecordPrinter.Print(System.Collections.Generic.IList{FileCabinetApp.Records.FileCabinetRecord},System.Collections.Generic.IList{System.String})">
            <summary>
            Print records to console.
            </summary>
            <param name="records">Records for printing.</param>
            <param name="fields">Fields that print.</param>
        </member>
        <member name="T:FileCabinetApp.Program">
            <summary>
            Console application for executing commands in the file cabinet.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Program.Main">
            <summary>
            Main method that determines which command to execute.
            </summary>
        </member>
        <member name="T:FileCabinetApp.Readers.FileCabinetRecordConsoleReader">
            <summary>
            Console record reader.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Readers.FileCabinetRecordConsoleReader.ReadRecordFromConsole(FileCabinetApp.Validators.IRecordValidator)">
            <summary>
            Read record from console.
            </summary>
            <param name="validator">Validate record.</param>
            <returns>Record without id <see cref="T:FileCabinetApp.Records.RecordWithoutId"/>.</returns>
        </member>
        <member name="T:FileCabinetApp.Readers.FileCabinetRecordCsvReader">
            <summary>
            Reader for importing data from csv file.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Readers.FileCabinetRecordCsvReader.#ctor(System.IO.StreamReader)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Readers.FileCabinetRecordCsvReader"/> class.
            </summary>
            <param name="reader">Stream reader for reading data.</param>
        </member>
        <member name="M:FileCabinetApp.Readers.FileCabinetRecordCsvReader.ReadAll">
            <summary>
            Get records list from file.
            </summary>
            <returns>records list.</returns>
        </member>
        <member name="T:FileCabinetApp.Readers.FileCabinetRecordXmlReader">
            <summary>
            Reader for importing data from xml file.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Readers.FileCabinetRecordXmlReader.#ctor(System.IO.FileStream)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Readers.FileCabinetRecordXmlReader"/> class.
            </summary>
            <param name="fileStream">file stream for reading data.</param>
        </member>
        <member name="M:FileCabinetApp.Readers.FileCabinetRecordXmlReader.ReadAll">
            <summary>
            Get records list from file.
            </summary>
            <returns>records list.</returns>
        </member>
        <member name="T:FileCabinetApp.Readers.ValidationRulesReader">
            <summary>
            Validation rules reader.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Readers.ValidationRulesReader.ReadRulesFromConfig">
            <summary>
            Read rules from config file.
            </summary>
            <returns>Validation rules <see cref="T:FileCabinetApp.Validators.Rules.ValidationRules"/>.</returns>
        </member>
        <member name="T:FileCabinetApp.Records.ByteRecord">
            <summary>
            Byte File Cabinet Record.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Records.ByteRecord.#ctor(FileCabinetApp.Records.FileCabinetRecord)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Records.ByteRecord"/> class.
            </summary>
            <param name="fileCabinetRecord">file cabinet record for byte writing.</param>
        </member>
        <member name="M:FileCabinetApp.Records.ByteRecord.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Records.ByteRecord"/> class.
            </summary>
            <param name="buffer">byte array that contains data for byte record.</param>
        </member>
        <member name="M:FileCabinetApp.Records.ByteRecord.ToFileCabinetRecord">
            <summary>
            Convert ByteRecord to FileCabinetRecord.
            </summary>
            <returns>file cabinet record.</returns>
        </member>
        <member name="T:FileCabinetApp.Records.FileCabinetRecord">
            <summary>
            Record in the file cabinet.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Records.FileCabinetRecord.#ctor(System.Int32,FileCabinetApp.Records.RecordWithoutId)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Records.FileCabinetRecord"/> class.
            Create FileCabinetRecord from RecordWithoutId.
            </summary>
            <param name="id">record id.</param>
            <param name="recordWithoutId">record data.</param>
        </member>
        <member name="M:FileCabinetApp.Records.FileCabinetRecord.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Records.FileCabinetRecord"/> class.
            Create FileCabinetRecord from RecordWithoutId.
            </summary>
            <param name="record">string tht contains record.</param>
        </member>
        <member name="M:FileCabinetApp.Records.FileCabinetRecord.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Records.FileCabinetRecord"/> class.
            </summary>
        </member>
        <member name="P:FileCabinetApp.Records.FileCabinetRecord.Id">
            <summary>
            Gets or sets record number in the file cabinet.
            </summary>
        </member>
        <member name="P:FileCabinetApp.Records.FileCabinetRecord.FirstName">
            <summary>
            Gets or sets first name in the record in the file cabinet.
            </summary>
        </member>
        <member name="P:FileCabinetApp.Records.FileCabinetRecord.LastName">
            <summary>
            Gets or sets last name in the record in the file cabinet.
            </summary>
        </member>
        <member name="P:FileCabinetApp.Records.FileCabinetRecord.DateOfBirth">
            <summary>
            Gets or sets date of birth in the record in the file cabinet.
            </summary>
        </member>
        <member name="P:FileCabinetApp.Records.FileCabinetRecord.Height">
            <summary>
            Gets or sets height in the record in the file cabinet.
            </summary>
        </member>
        <member name="P:FileCabinetApp.Records.FileCabinetRecord.Weight">
            <summary>
            Gets or sets weight in the record in the file cabinet.
            </summary>
        </member>
        <member name="P:FileCabinetApp.Records.FileCabinetRecord.FavoriteCharacter">
            <summary>
            Gets or sets favorite character in the record in the file cabinet.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Records.FileCabinetRecord.ToString">
            <summary>
            Get record in string format.
            </summary>
            <returns>
            return record in string format.
            </returns>
        </member>
        <member name="T:FileCabinetApp.Records.RecordWithoutId">
            <summary>
            Introduce Parameter Object.
            </summary>
        </member>
        <member name="P:FileCabinetApp.Records.RecordWithoutId.FirstName">
            <summary>
            Gets or sets first name.
            </summary>
        </member>
        <member name="P:FileCabinetApp.Records.RecordWithoutId.LastName">
            <summary>
            Gets or sets last name.
            </summary>
        </member>
        <member name="P:FileCabinetApp.Records.RecordWithoutId.DateOfBirth">
            <summary>
            Gets or sets date of birth.
            </summary>
        </member>
        <member name="P:FileCabinetApp.Records.RecordWithoutId.Height">
            <summary>
            Gets or sets height.
            </summary>
            <value>not less than 0.</value>
        </member>
        <member name="P:FileCabinetApp.Records.RecordWithoutId.Weight">
            <summary>
            Gets or sets weight.
            </summary>
            <value>not less than 0.</value>
        </member>
        <member name="P:FileCabinetApp.Records.RecordWithoutId.FavoriteCharacter">
            <summary>
            Gets or sets favorite character.
            </summary>
        </member>
        <member name="T:FileCabinetApp.Services.FileCabinetFilesystemService">
            <summary>
            File cabinet with file storage.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetFilesystemService.#ctor(System.IO.FileStream,FileCabinetApp.Validators.IRecordValidator)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Services.FileCabinetFilesystemService"/> class.
            </summary>
            <param name="fileStream">file stream to write.</param>
            <param name="validator">validator.</param>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetFilesystemService.GetValidator">
            <summary>
            Get validator.
            </summary>
            <returns>validator.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetFilesystemService.CreateRecord(FileCabinetApp.Records.RecordWithoutId)">
            <summary>
            Create record, adds to file.
            </summary>
            <param name="recordWithoutId">record data.</param>
            <returns>record number.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetFilesystemService.Insert(FileCabinetApp.Records.FileCabinetRecord)">
            <summary>
            Insert record.
            </summary>
            <param name="record">record.</param>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetFilesystemService.GetRecords">
            <summary>
            Get records from the file.
            </summary>
            <returns>Array of records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetFilesystemService.GetStat">
            <summary>
            Get count records from the file.
            </summary>
            <returns>count of records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetFilesystemService.MakeSnapshot">
            <summary>
            Make snapshot.
            </summary>
            <returns>FileCabinetService snapshot.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetFilesystemService.Restore(FileCabinetApp.Services.FileCabinetServiceSnapshot)">
            <summary>
            Restore records.
            </summary>
            <param name="fileCabinetServiceSnapshot">snapshot that contains data.</param>
            <returns>amount imported records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetFilesystemService.Delete(System.ValueTuple{System.String,System.String}[])">
            <summary>
            delete record with given parameter.
            </summary>
            <param name="where">parameters for deleting.</param>
            <returns>List of deleted records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetFilesystemService.Update(System.Collections.Generic.IList{System.ValueTuple{System.String,System.String}},System.Collections.Generic.IList{System.ValueTuple{System.String,System.String}})">
            <summary>
            Update records.
            </summary>
            <param name="replaceList">List with data for updating record.</param>
            <param name="whereList">List with data for finding records.</param>
            <returns>list of indices updated records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetFilesystemService.GetRecordsWhere(System.Collections.Generic.IList{System.ValueTuple{System.String,System.String}})">
            <summary>
            Get records with parameters that contain in whereList.
            </summary>
            <param name="whereList">contain parameters for searching.</param>
            <returns>List of records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetFilesystemService.Purge">
            <summary>
            Purge deleted records.
            </summary>
            <returns>Amount deleted records.</returns>
        </member>
        <member name="T:FileCabinetApp.Services.FileCabinetMemoryService">
            <summary>
            File cabinet with memory storage.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetMemoryService.#ctor(FileCabinetApp.Validators.IRecordValidator)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Services.FileCabinetMemoryService"/> class.
            </summary>
            <param name="validator">validator.</param>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetMemoryService.GetValidator">
            <summary>
            Get validator.
            </summary>
            <returns>validator.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetMemoryService.CreateRecord(FileCabinetApp.Records.RecordWithoutId)">
            <summary>
            Create record, adds to list and dictionaries.
            </summary>
            <param name="recordWithoutId">record data.</param>
            <returns>record number.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetMemoryService.Insert(FileCabinetApp.Records.FileCabinetRecord)">
            <summary>
            Insert record.
            </summary>
            <param name="record">record.</param>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetMemoryService.GetRecords">
            <summary>
            Get records from the file cabinet list.
            </summary>
            <returns>Array of records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetMemoryService.GetStat">
            <summary>
            Get count records from the file cabinet list..
            </summary>
            <returns>count of records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetMemoryService.MakeSnapshot">
            <summary>
            Make snapshot.
            </summary>
            <returns>FileCabinetService snapshot.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetMemoryService.Restore(FileCabinetApp.Services.FileCabinetServiceSnapshot)">
            <summary>
            Restore records.
            </summary>
            <param name="fileCabinetServiceSnapshot">snapshot that contains data.</param>
            <returns>amount imported records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetMemoryService.Delete(System.ValueTuple{System.String,System.String}[])">
            <summary>
            delete record with given parameter.
            </summary>
            <param name="where">parameters for deleting.</param>
            <returns>List of deleted records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetMemoryService.Update(System.Collections.Generic.IList{System.ValueTuple{System.String,System.String}},System.Collections.Generic.IList{System.ValueTuple{System.String,System.String}})">
            <summary>
            Update records.
            </summary>
            <param name="replaceList">List with data for updating record.</param>
            <param name="whereList">List with data for finding records.</param>
            <returns>list of indices updated records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetMemoryService.GetRecordsWhere(System.Collections.Generic.IList{System.ValueTuple{System.String,System.String}})">
            <summary>
            Get records with parameters that contain in whereList.
            </summary>
            <param name="whereList">contain parameters for searching.</param>
            <returns>List of records.</returns>
        </member>
        <member name="T:FileCabinetApp.Services.FileCabinetServiceSnapshot">
            <summary>
            Snapshot FileCabinetService.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetServiceSnapshot.#ctor(System.Collections.ObjectModel.ReadOnlyCollection{FileCabinetApp.Records.FileCabinetRecord})">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Services.FileCabinetServiceSnapshot"/> class.
            </summary>
            <param name="records">Records for initializing.</param>
        </member>
        <member name="P:FileCabinetApp.Services.FileCabinetServiceSnapshot.Records">
            <summary>
            Gets records.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetServiceSnapshot.SaveToCsv(System.IO.StreamWriter)">
            <summary>
            Save records to csv file.
            </summary>
            <param name="streamWriter">Stream writer to write.</param>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetServiceSnapshot.SaveToXml(System.IO.StreamWriter)">
            <summary>
            Save records to xml file.
            </summary>
            <param name="streamWriter">Stream writer to write.</param>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetServiceSnapshot.LoadFromCsv(System.IO.StreamReader)">
            <summary>
            load data from csv file.
            </summary>
            <param name="streamReader">file for reading.</param>
        </member>
        <member name="M:FileCabinetApp.Services.FileCabinetServiceSnapshot.LoadFromXml(System.IO.FileStream)">
            <summary>
            load data from xml file.
            </summary>
            <param name="fileStream">file stream for reading.</param>
        </member>
        <member name="T:FileCabinetApp.Services.IFileCabinetService">
            <summary>
            File cabinet.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Services.IFileCabinetService.GetValidator">
            <summary>
            Get validator.
            </summary>
            <returns>validator.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.IFileCabinetService.CreateRecord(FileCabinetApp.Records.RecordWithoutId)">
            <summary>
            Create record.
            </summary>
            <param name="recordWithoutId">record data.</param>
            <returns>record id.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.IFileCabinetService.Insert(FileCabinetApp.Records.FileCabinetRecord)">
            <summary>
            Insert record.
            </summary>
            <param name="record">record.</param>
        </member>
        <member name="M:FileCabinetApp.Services.IFileCabinetService.GetRecords">
            <summary>
            Get list of the records.
            </summary>
            <returns>lis of the records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.IFileCabinetService.GetStat">
            <summary>
            Get count records.
            </summary>
            <returns>count records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.IFileCabinetService.MakeSnapshot">
            <summary>
            Make snapshot.
            </summary>
            <returns>FileCabinetService snapshot.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.IFileCabinetService.Restore(FileCabinetApp.Services.FileCabinetServiceSnapshot)">
            <summary>
            Restore records.
            </summary>
            <param name="fileCabinetServiceSnapshot">snapshot that contains data.</param>
            <returns>amount imported records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.IFileCabinetService.Delete(System.ValueTuple{System.String,System.String}[])">
            <summary>
            delete record with given parameter.
            </summary>
            <param name="where">parameters for deleting.</param>
            <returns>List of deleted records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.IFileCabinetService.Update(System.Collections.Generic.IList{System.ValueTuple{System.String,System.String}},System.Collections.Generic.IList{System.ValueTuple{System.String,System.String}})">
            <summary>
            Update records.
            </summary>
            <param name="replaceList">List with data for updating record.</param>
            <param name="whereList">List with data for finding records.</param>
            <returns>list of indices updated records.</returns>
        </member>
        <member name="M:FileCabinetApp.Services.IFileCabinetService.GetRecordsWhere(System.Collections.Generic.IList{System.ValueTuple{System.String,System.String}})">
            <summary>
            Get records with parameters that contain in whereList.
            </summary>
            <param name="whereList">contain parameters for searching.</param>
            <returns>List of records.</returns>
        </member>
        <member name="T:FileCabinetApp.Services.ServiceLogger">
            <summary>
            Logger for <see cref="T:FileCabinetApp.Services.IFileCabinetService"/>.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Services.ServiceLogger.#ctor(FileCabinetApp.Services.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Services.ServiceLogger"/> class.
            </summary>
            <param name="service">Service <see cref="T:FileCabinetApp.Services.IFileCabinetService"/>.</param>
        </member>
        <member name="T:FileCabinetApp.Services.ServiceMeter">
            <summary>
            Ticks meter for <see cref="T:FileCabinetApp.Services.IFileCabinetService"/>.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Services.ServiceMeter.#ctor(FileCabinetApp.Services.IFileCabinetService)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Services.ServiceMeter"/> class.
            </summary>
            <param name="service">Service <see cref="T:FileCabinetApp.Services.IFileCabinetService"/>.</param>
        </member>
        <member name="T:FileCabinetApp.Services.Storage">
            <summary>
            Storage for method results.
            </summary>
        </member>
        <member name="T:FileCabinetApp.Settings.Launcher">
            <summary>
            Program start launcher.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Settings.Launcher.SetSettings(System.String[])">
            <summary>
            Set program settings.
            </summary>
            <param name="settings">Setting.</param>
            <returns>Service <see cref="T:FileCabinetApp.Services.IFileCabinetService"/> with settings.</returns>
        </member>
        <member name="T:FileCabinetApp.Validators.IRecordValidator">
            <summary>
            Validation parameters.
            </summary>
        </member>
        <member name="T:FileCabinetApp.Writers.FileCabinetByteRecordWriter">
            <summary>
            Byte Writer for FileCabinetService.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Writers.FileCabinetByteRecordWriter.#ctor(System.IO.FileStream)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Writers.FileCabinetByteRecordWriter"/> class.
            </summary>
            <param name="fileStream">Writer.</param>
        </member>
        <member name="M:FileCabinetApp.Writers.FileCabinetByteRecordWriter.Write(FileCabinetApp.Records.ByteRecord)">
            <summary>
            Write record.
            </summary>
            <param name="record">Record for write.</param>
        </member>
        <member name="T:FileCabinetApp.Writers.FileCabinetRecordCsvWriter">
            <summary>
            Csv Writer for FileCabinetService.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Writers.FileCabinetRecordCsvWriter.#ctor(System.IO.TextWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Writers.FileCabinetRecordCsvWriter"/> class.
            </summary>
            <param name="writer">Writer.</param>
        </member>
        <member name="M:FileCabinetApp.Writers.FileCabinetRecordCsvWriter.Write(FileCabinetApp.Records.FileCabinetRecord)">
            <summary>
            Write record.
            </summary>
            <param name="record">Record for write.</param>
        </member>
        <member name="T:FileCabinetApp.Writers.FileCabinetRecordXmlWriter">
            <summary>
            Xml Writer for FileCabinetService.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Writers.FileCabinetRecordXmlWriter.#ctor(System.Xml.XmlWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Writers.FileCabinetRecordXmlWriter"/> class.
            </summary>
            <param name="writer">Writer.</param>
        </member>
        <member name="M:FileCabinetApp.Writers.FileCabinetRecordXmlWriter.Write(FileCabinetApp.Records.FileCabinetRecord)">
            <summary>
            Write record.
            </summary>
            <param name="record">Record for write.</param>
        </member>
        <member name="T:FileCabinetApp.Writers.LogsWriter">
            <summary>
            Logs writer.
            </summary>
        </member>
        <member name="M:FileCabinetApp.Writers.LogsWriter.#ctor(System.IO.TextWriter)">
            <summary>
            Initializes a new instance of the <see cref="T:FileCabinetApp.Writers.LogsWriter"/> class.
            </summary>
            <param name="writer">File for writing.</param>
        </member>
    </members>
</doc>
